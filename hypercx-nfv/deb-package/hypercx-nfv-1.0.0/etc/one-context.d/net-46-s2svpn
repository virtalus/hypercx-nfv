#!/bin/sh

# -------------------------------------------------------------------------- #
# Copyright 2010-2016, OpenNebula Systems                                    #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

remote_site_ip="$S2S_REMOTE_SITE_IP"
remote_networks="$S2S_REMOTE_NETWORKS"

pre_shared_key="$S2S_PRE_SHARED_KEY"

VMID="$VMID"
#p1_algorithm=aes
#p1_key_length=256
#p1_hash=sha2_256
#p1_dh_group=1024
#p1_lifetime=28800

#p2_algorithm=aes
#p2_key_length=256
#p2_hash=sha2_256
#p2_dh_group=
#p2_lifetime=3600

automatically_ping_host="$S2S_HOST_TO_PING"

start_ipsec () {
    ipsec start
}

stop_ipsec () {
    ipsec stop
}

restart_ipsec () {
	systemctl restart strongswan
}

s2s_vpn () {
if [ -n "$remote_site_ip" ] && [ -n "$remote_networks" ] && [ -n "$pre_shared_key" ]; then	
		stop_ipsec
		echo "S2S VPN ENABLED" >> /etc/motd
		onegate vm update $VMID --data S2S_VPN_STATUS=ENABLED 2>/dev/null
		cp /etc/ipsec.conf /etc/ipsec.conf.bk
		cp /etc/ipsec.secrets /etc/ipsec.secrets.bk
		cat > /etc/ipsec.conf <<EOF
# HyperCX IPsec configuration file

# basic configuration

config setup
	strictcrlpolicy=no
        uniqueids = yes
        charondebug="all"

# VPN Connections

conn VPN
	authby=secret
      	left=%defaultroute
	leftid=$(cat /root/public)
      	right=$remote_site_ip
        ike=aes256-sha2_256-modp1024!
        esp=aes256-sha2_256!
        keyingtries=0
        ikelifetime=1h
        lifetime=8h
       	dpddelay=30
       	dpdtimeout=120
       	dpdaction=restart
       	auto=start
EOF

	echo "Remote Public IP: $remote_site_ip" >> /etc/motd
	ip="$(cat /var/run/one-context/one_env | grep -E "S2S_REMOTE_SITE_IP" | cut -d '"' -f 2)"
	onegate vm update $VMID --data S2S_REMOTE_SITE_IP=$ip 2>/dev/null
	echo "Local Public IP: $(cat /root/public)" >> /etc/motd
	get_local_networks
	add_networks 
	add_key
	add_automatic_ping
	check_changes
else
	echo "S2S VPN DISABLED. ETH0 found using a public IP but the Remote Site parameters not found." >> /etc/motd
	onegate vm update $VMID --data S2S_VPN_INFO=Remote_Site_parameters_not_found. 2>/dev/null
	onegate vm update $VMID --data S2S_VPN_STATUS=DISABLED 2>/dev/null
fi
}

check_changes () {
	ipsec_config="/etc/ipsec.conf"
	previous_ipsec_config="/etc/ipsec.conf.bk"
	ipsec_secrets="/etc/ipsec.secrets"
        previous_ipsec_secrets="/etc/ipsec.secrets.bk"

	if cmp -s "$ipsec_config" "$previous_ipsec_config"; then
		if cmp -s "$ipsec_secrets" "$previous_ipsec_secrets"; then
			echo "No modification needed" >> /etc/motd
			onegate vm update $VMID --data S2S_VPN_INFO=No_modification_needed. 2>/dev/null
		else
			echo "A change was detected in the file ipsec.secrets and it will be modified" >> /etc/motd
			onegate vm update $VMID --data S2S_VPN_Notification=ipsec.secrets_will_be_modified. 2>/dev/null
			start_ipsec
			restart_ipsec
		fi
	elif cmp -s "$ipsec_secrets" "$previous_ipsec_secrets"; then
		echo "A change was detected in the file ipsec.conf and it will be modified" >> /etc/motd
		onegate vm update $VMID --data S2S_VPN_INFO=ipsec.conf_will_be_modified. 2>/dev/null
		start_ipsec
		restart_ipsec
	else
		echo "A change was detected in the files ipsec.conf&ipsec.secrets and they will be modified" >> /etc/motd
		onegate vm update $VMID --data S2S_VPN_INFO=ipsec.conf_and_ipsec.secrets_will_be_modified. 2>/dev/null
                start_ipsec
                restart_ipsec
	fi

}

add_networks () {
counter=1
networks="$(cat /root/net | tr -s ' ' | cut -d ' ' -f 2 | tr '\n' ' ' | sed 's/,$//')"
for ip in $(echo $remote_networks); do
	counter1=1
	for net in $(echo $networks); do
		if [ "$counter" != '1' ] && [ "$counter1" != '1' ]; then
			echo "# More remote networks" >> /etc/ipsec.conf
			echo "conn VPN_"$counter1"_$counter" >> /etc/ipsec.conf
			echo "	also=VPN" >> /etc/ipsec.conf
			echo "	leftsubnet=$net" >> /etc/ipsec.conf
			echo "	rightsubnet=$ip" >> /etc/ipsec.conf

		elif [ "$counter" != '1' ] && [ "$counter1" = '1' ]; then
                        echo "# More remote networks" >> /etc/ipsec.conf
                        echo "conn VPN_"$counter1"_$counter" >> /etc/ipsec.conf
                        echo "	also=VPN" >> /etc/ipsec.conf
                        echo "	leftsubnet=$net" >> /etc/ipsec.conf
                        echo "	rightsubnet=$ip" >> /etc/ipsec.conf
                        echo "Remote network $counter: $ip" >> /etc/motd

		elif [ "$counter" = '1' ] && [ "$counter1" != '1' ]; then
                        echo "# More remote networks" >> /etc/ipsec.conf
                        echo "conn VPN_"$counter1"_$counter" >> /etc/ipsec.conf
                        echo "	also=VPN" >> /etc/ipsec.conf
                        echo "	leftsubnet=$net" >> /etc/ipsec.conf
                        echo "	rightsubnet=$ip" >> /etc/ipsec.conf
		else	
				echo "	leftsubnet=$net" >> /etc/ipsec.conf
				echo "	rightsubnet=$ip" >> /etc/ipsec.conf
				echo "Remote network $counter: $ip" >> /etc/motd
		fi
	counter1=$((counter1+1))
done
counter=$((counter+1))
done
}

add_key () {
	echo " $(cat /root/public) $remote_site_ip : PSK "$pre_shared_key" " > /etc/ipsec.secrets
}

add_automatic_ping () {
	if [ -n "$automatically_ping_host" ]; then
		echo "#!/bin/sh" > /opt/hypercx-nfv/s2svpn.sh
		echo "/bin/ping -c 10 $automatically_ping_host" >> /opt/hypercx-nfv/s2svpn.sh
		echo "/sbin/iptables -t nat -I POSTROUTING -m policy --pol ipsec --dir out -j ACCEPT" >> /opt/hypercx-nfv/s2svpn.sh
	else
		echo "#!/bin/sh" > /opt/hypercx-nfv/s2svpn.sh
		echo "/sbin/iptables -t nat -I POSTROUTING -m policy --pol ipsec --dir out -j ACCEPT" >> /opt/hypercx-nfv/s2svpn.sh
	fi
	echo "/usr/sbin/ipsec start" >> /opt/hypercx-nfv/s2svpn.sh
	rm -f /root/net
	rm -f /root/public
	rm -f /root/enviroment
}

get_local_networks () {
env | grep -E "*ETH[1-9]+_MAC" | cut -d '_' -f 1 >> /root/enviroment
input=/root/enviroment
while IFS= read -r nic; do
    ipv4=$(env | grep -E "^$nic+_IP=" | cut -d '=' -f 2)
    mask=$(env | grep -E "^$nic+_MASK=" | cut -d '=' -f 2)
    if [ -n "${ipv4}" ] && [ -n "${mask}" ]; then
        ipv4_net_addr=$(ipcalc $ipv4 $mask | grep Network | awk '{print $2}')
        echo "Local network: $ipv4_net_addr" >> /etc/motd
        echo "$ipv4_net_addr" >> /root/net
    fi
done < "$input"
}

get_first_interface_ipv4() {
    env | grep -E "^ETH0+_IP=" | cut -d '=' -f 2
}

get_first_interface_floating_ipv4() {
    env | grep -E "^ETH0+_VROUTER_IP=" | cut -d '=' -f 2
}

echo "=========================S2S VPN========================" >> /etc/motd
if [ -n "${ETH0_MAC}" ]; then
	if [ -n "${ETH0_VROUTER_IP}" ]; then
        ipv4="$(get_first_interface_floating_ipv4)"
        ipv4_private="$(echo $ipv4 | grep -E '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)')"
    else
        ipv4="$(get_first_interface_ipv4)"
        ipv4_private="$(echo $ipv4 | grep -E '^(192\.168|10\.|172\.1[6789]\.|172\.2[0-9]\.|172\.3[01]\.)')"
    fi
    if [ -z "${ipv4_private}" ]; then
        	echo "$ipv4" >> /root/public
		s2s_vpn
    else
        echo "S2S VPN DISABLED. ETH0 found using a private IP ." >> /etc/motd
	onegate vm update $VMID --data S2S_VPN=ETH0_found_using_a_private_IP. 2>/dev/null
	onegate vm update $VMID --data S2S_VPN_STATUS=DISABLED 2>/dev/null
    fi
else
    echo "S2S VPN DISABLED. NO ETH0 MAC." >> /etc/motd
    onegate vm update $VMID --data S2S_VPN=NO_ETH0 2>/dev/null
    onegate vm update $VMID --data S2S_VPN_STATUS=DISABLED 2>/dev/null
fi

